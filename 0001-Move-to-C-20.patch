From 26dcb00da541d444d629473d1276d8814a768fec Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Thu, 2 May 2024 16:10:36 -0700
Subject: [PATCH 1/2] Move to C++20

---
 CMakeLists.txt                     | 2 +-
 src/ui/knot/knot-holder-entity.cpp | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5c25ebb..eaf828d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -18,7 +18,7 @@ message("Binary Dir: ${CMAKE_CURRENT_BINARY_DIR}")
 # -----------------------------------------------------------------------------
 # CMake Configuration
 # -----------------------------------------------------------------------------
-set(CMAKE_CXX_STANDARD 17)
+set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 # set(CMAKE_CXX_EXTENSIONS OFF) # enforces -std=c++17 instead of -std=gnu++17
                                 # TODO: build currently fails with it as we actually depend on GNU compiler extensions...
diff --git a/src/ui/knot/knot-holder-entity.cpp b/src/ui/knot/knot-holder-entity.cpp
index 6672c0f..3d71003 100644
--- a/src/ui/knot/knot-holder-entity.cpp
+++ b/src/ui/knot/knot-holder-entity.cpp
@@ -329,7 +329,7 @@ PatternKnotHolderEntityScale::knot_set(Geom::Point const &p, Geom::Point const &
     double scale_x = std::clamp(new_extent[X] / _cached_diagonal[X], _cached_min_scale, 1e9);
     double scale_y = std::clamp(new_extent[Y] / _cached_diagonal[Y], _cached_min_scale, 1e9);
 
-    Affine new_transform = (state & GDK_CONTROL_MASK) ? Scale(lerp(0.5, scale_x, scale_y))
+    Affine new_transform = (state & GDK_CONTROL_MASK) ? Scale(std::lerp(0.5, scale_x, scale_y))
                                                       : Scale(scale_x, scale_y);
 
     // 2. Calculate offset to keep pattern origin aligned
-- 
2.44.0

